% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tab.R
\name{tab}
\alias{tab}
\title{Create cross-tabulation tables with flexible formula syntax}
\usage{
tab(
  data,
  rows,
  cols = NULL,
  filter = NULL,
  weight = NULL,
  statistic = c("column_pct", "count", "row_pct", "mean"),
  values = NULL,
  show_row_nets = TRUE,
  show_col_nets = TRUE,
  show_base = TRUE,
  low_base_threshold = 0,
  label_mode = "full",
  helpers = NULL,
  stats = NULL,
  resolve_report = FALSE,
  ...
)
}
\arguments{
\item{data}{Data frame or survey_data object}

\item{rows}{Row specification (variable name, expression, or named list)}

\item{cols}{Column specification (optional)}

\item{filter}{Table-wide filter expression (optional)}

\item{weight}{Weight variable name (optional)}

\item{statistic}{Type of statistic: "column_pct", "count", "row_pct", "mean"}

\item{values}{Variable name to aggregate for value-based statistics like mean (optional)}

\item{show_row_nets}{Whether to show NET of rows (NET row for column_pct, NET column for row_pct)}

\item{show_col_nets}{Whether to show Base row/column}

\item{low_base_threshold}{Numeric, minimum base size required to show a column}

\item{label_mode}{Character string specifying how labels should be displayed:
\itemize{
\item \code{"smart"}: Show suffixes for multi-item questions, full labels
for single items
\item \code{"full"}: Always show full variable labels (default)
\item \code{"suffix"}: Show question suffixes when available, otherwise
extract from label
}}

\item{helpers}{List of custom tab_helper objects}

\item{stats}{List of custom tab_stat objects}

\item{resolve_report}{Whether to return variable resolution details}

\item{...}{Additional arguments}
}
\value{
Cross-tabulation table as data.frame
}
\description{
Create cross-tabulation tables with flexible formula syntax
}
\examples{
# Traditional syntaxcorrec
tab(data, "q1", "gender")

# Formula syntax
tab(data, q1 * (age > 30), gender)

# With table-wide filter
tab(data, q1, gender, filter = age > 18)

# Multiple row groups
tab(data, rows = rows_list("Total" = q1, "Young" = q1 * (age < 30)))
}
