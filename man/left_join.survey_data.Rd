% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/surveymetadatafunctions.R
\name{left_join.survey_data}
\alias{left_join.survey_data}
\title{Left join for survey_data objects}
\usage{
\method{left_join}{survey_data}(
  x,
  y,
  by = NULL,
  copy = FALSE,
  suffix = c(".x", ".y"),
  keep = NULL,
  na_matches = c("na", "never"),
  multiple = "all",
  unmatched = "drop",
  relationship = NULL,
  ...
)
}
\arguments{
\item{x}{A survey_data object (left side of join)}

\item{y}{A survey_data object or data frame (right side of join)}

\item{by}{A character vector of variables to join by. If NULL, will use common variables.}

\item{copy, suffix, keep, na_matches, multiple, unmatched, relationship}{Parameters passed to dplyr::left_join}
}
\value{
A new survey_data object with joined data and updated metadata
}
\description{
Performs a left join on survey_data objects while preserving and updating metadata.
Accepts both survey_data objects and regular data frames as the right-hand side.
When joining with another survey_data object, metadata is merged with new metadata
taking precedence. When joining with a data frame, metadata is automatically
generated for new columns.
}
\examples{
# Join two survey_data objects
survey1 <- create_survey_data(get_minimal_labelled_test_dat())
survey2 <- create_survey_data(data.frame(uid = 1:5, new_var = letters[1:5]))
joined <- dplyr::left_join(survey1, survey2, by = "uid")

# Join survey_data with regular data frame
df2 <- data.frame(uid = 1:5, score = rnorm(5))
joined2 <- dplyr::left_join(survey1, df2, by = "uid")
}
