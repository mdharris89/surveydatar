% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/surveymetadatafunctions.R
\name{update_dict_with_metadata}
\alias{update_dict_with_metadata}
\title{update_dict_with_metadata}
\usage{
update_dict_with_metadata(
  survey_obj = NULL,
  temp_dat = NULL,
  temp_dpdict = NULL,
  variables_to_update = NULL,
  variable_name_sep = "_",
  splitbyclass = TRUE,
  splitbynumlabelledvalues = TRUE,
  splitbynoncontiguous = TRUE,
  splitbycommonlabel = TRUE,
  findlongest = TRUE,
  variable_compare_mode = "reduced",
  min_common_strings = 3,
  labelsep = " - ",
  edit_aliases = FALSE,
  noisy = 0
)
}
\arguments{
\item{survey_obj}{a survey_data object, or NULL, in which case must provide temp_dat and temp_dpdict}

\item{temp_dat}{survey data dataframe}

\item{temp_dpdict}{a dpdict to update}

\item{variables_to_update}{optionally specify only certain variables in the existing temp_dpdict to update}

\item{variable_name_sep}{"\emph{" by default. string that separates each variable within a common question, e.g. if Q1_1, Q1_2 "}" is the correct variable_name_sep.}

\item{splitbyclass}{boolean. if true, every successive new class is given a new unique suffix}

\item{splitbynumlabelledvalues}{boolean. if true, each variable with a different number of labelled values is given a new unique suffix (because we would expect multiple variables in the same question to have the same number of options, e.g. battery of likert scales)}

\item{splitbynoncontiguous}{boolean. if true, variables with the same variable name prefix that are not located adjacent to each other are given a new unique suffix}

\item{splitbycommonlabel}{boolean. if true, each variable for which the longest common string within the variable label for that variable does not match the longest common string within the question group as a whole, is given a new suffix}

\item{findlongest}{boolean. if true, applies splitbycommonlabel by looking for the longest common substring. (this is computationally expensive.) if false, takes substring preceding labelsep as the commonlabel.}

\item{variable_compare_mode}{either "complete" or "reduced'. setting for when findlongest == TRUE. "reduced" is computationally cheaper. if "complete", compares within the entire question group to find lcs for each statement. if "reduced", only looks at the variables before and after the variable in question, according to consecutive_range (a parameter in split_into_question_groups)}

\item{min_common_strings}{integer. setting for when findlongest == TRUE. looks for substrings common to at least min_common_strings other variables in the question group and will take from this subset the longest string.}

\item{labelsep}{string. setting for when findlongest == FALSE, in which case uses the substring in the variable name prior to labelsep as commonlabel.}

\item{edit_aliases}{boolean. whether to allow user to manually edit question_aliases using data_edit before creating alias_with_suffix. (question_folder can be defined at the same time)}

\item{noisy}{integer between 1 and 4. 1 by default. if 1, signals start of attempts to find question groups, and multiresponse. if noisy == 2 provides timing and updates within question groups and multiresponse hunts. noisy > 2 has settings within function for finding question groups.}
}
\value{
a dp_dict with metadata
}
\description{
given a dpdict, updates additional metadata fields for a requested set of variables given by variables_to_update (or if NULL, all variables)
}
\details{
metadata included:
variable-level metadata: question_group, variable class, and then checks for single variable question, dichotomous variable, variable with value labels, and multiresponse variable, which are in turn used to define questiontype
question-level metadata: question_alias, question_description, question_suffix, alias_with_suffix, and question_folder
question_alias is intended as a user-defined identifier for the question but takes the values of question_group by default
question_description, question_suffix, and alias_with_suffix are useful when creating tables and visualisations
requires: split_into_question_groups()
most arguments are settings for split_into_question_groups()

notes:
\itemize{
\item identifies categorical and multiresponse ('select all') variables by the presence of value labels. i.e. if a variable has class labelled but not value labels, it will not be given questiontype multiresponse, categorical or categorical array. (usually it will be a numeric or multinumeric)
\item findlongest=TRUE, with splitbycommonlabel=TRUE takes significantly longer (as it attempts to split by analysing strings). may not be necessary for some processing - if correct common label is always the string prior to label_sep.
\item variable labels should be hierarchically structured, with unique statements at the end. e.g. "Q1. Question text - Attitude statement - answer code"
\item checking for multiresponse variables can also takes a while but is required.
\item if last variable in a question in returned dict just keeps its full string, min_common_strings may be set too high
}
}
\examples{
# For survey_data object
survey_obj <- create_survey_data(get_big_test_dat(n=10))
survey_obj <- update_dict_with_metadata(survey_obj)

# For separate temp_dat and temp_dpdict
temp_dat <- get_big_test_dat(n=10)
temp_dpdict <- create_dict(temp_dat, prefill = TRUE)
temp_dpdict <- update_dict_with_metadata(NULL, temp_dat, temp_dpdict)
}
