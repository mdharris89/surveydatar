% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/surveymetadatafunctions.R
\name{update_dict_with_metadata}
\alias{update_dict_with_metadata}
\title{update_dict_with_metadata}
\usage{
update_dict_with_metadata(
  survey_obj = NULL,
  temp_dat = NULL,
  temp_dpdict = NULL,
  variables_to_update = NULL,
  seps_to_use = NULL,
  ignorelabelbeforeprefix = TRUE,
  split_into_groups_config = NULL,
  edit_aliases = FALSE,
  noisy = 0
)
}
\arguments{
\item{survey_obj}{a survey_data object, or NULL, in which case must provide temp_dat and temp_dpdict}

\item{temp_dat}{survey data dataframe}

\item{temp_dpdict}{a dpdict to update}

\item{variables_to_update}{optional logical vector to specify that only certain variables in the existing temp_dpdict should be updated}

\item{seps_to_use}{optional specifying separators to use for processing:
- variable_name_sep: String that separates each variable within a common question, e.g. "_" for Q1_1, Q1_2.
- prefix_sep: String. If ignorelabelbeforeprefix == TRUE, substring before prefix_sep will be removed before working with variable labels.
- statement_sep: String. For findlongest == FALSE, uses substring prior to statement_sep as commonlabel.}

\item{ignorelabelbeforeprefix}{Logical. If TRUE, removes substring before prefix_sep before working with variable labels.}

\item{split_into_groups_config}{options for split_into_question_groups}

\item{edit_aliases}{logical. whether to allow user to manually edit question_aliases using data_edit before creating alias_with_suffix. (question_folder can be defined at the same time)}

\item{noisy}{integer between 1 and 4. 1 by default. if 1, signals start of attempts to find question groups, and multiresponse. if noisy == 2 provides timing and updates within question groups and multiresponse hunts. noisy > 2 has settings within function for finding question groups.}
}
\value{
If \code{survey_obj} was provided, returns the updated \code{survey_data} object.
Otherwise, returns the updated \code{dpdict} data frame
}
\description{
Given a dpdict, updates additional metadata fields for a requested set of variables given by variables_to_update, or if NULL, all variables.
}
\details{
metadata included:
\itemize{
\item variable-level metadata: question_group, variable class, and then checks for single variable question, dichotomous variable, variable with value labels, and multiresponse variable, which are in turn used to define questiontype
\item question-level metadata: question_alias, question_description, question_suffix, alias_with_suffix, and question_folder
\item question_alias is intended as a user-defined identifier for the question but takes the values of question_group by default
\item question_description, question_suffix, and alias_with_suffix are useful when creating tables and visualisations
}

The function performs several steps:
\itemize{
\item Standardizes separators in variable names and labels using \code{\link{get_updated_seps}}.
\item Determines question groups using \code{\link{split_into_question_groups}}.
\item Infers variable metadata (class, single/dichotomous, value labels).
\item Attempts to identify multiresponse variable sets (may take time on large datasets). Note: identification relies on values != 0 or NA within a question group.
\item Assigns a \code{questiontype} based on the inferred metadata (e.g., 'numeric', 'categorical', 'multiresponse', 'text'). Warnings are issued for undefined types.
\item Creates question-level metadata (alias, description, folder) using \code{\link{create_questions_dict}}.
\item Generates unique suffixes for variables within question groups using \code{\link{get_unique_suffixes}} and creates an \code{alias_with_suffix}.
}

other notes:
\itemize{
\item identifies categorical and multiresponse ('select all') variables by the presence of value labels. i.e. if a variable has class labelled but not value labels, it will not be given questiontype multiresponse, categorical or categorical array. (usually it will be a numeric or multinumeric)
\item findlongest=TRUE, with splitbycommonlabel=TRUE takes significantly longer (as it attempts to split by analysing strings). may not be necessary for some processing - if correct common label is always the string prior to label_sep.
\item variable labels should be hierarchically structured, with unique statements at the end. e.g. "Q1. Question text - Attitude statement - answer code"
\item checking for multiresponse variables can also take a while but is required.
\item if last variable in a question in returned dict just keeps its full string, min_common_strings may be set too high
}
}
\examples{
# For survey_data object
survey_obj <- create_survey_data(get_big_test_dat(n=10))
survey_obj <- update_dict_with_metadata(survey_obj)

# For separate temp_dat and temp_dpdict
temp_dat <- get_big_test_dat(n=10)
temp_dpdict <- create_dict(temp_dat, prefill = TRUE)
temp_dpdict <- update_dict_with_metadata(NULL, temp_dat, temp_dpdict)
}
